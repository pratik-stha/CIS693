<profile>

<section name = "Vivado HLS Report for 'PartitionCheckII'" level="0">
<item name = "Date">Mon Nov 23 01:20:32 2020
</item>
<item name = "Version">2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)</item>
<item name = "Project">PartitionCheckII</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020-clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 8.750 ns, 1.25 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">?, ?, ?, ?, ?, ?, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- memcpy.buff.array">?, ?, 3, 1, 1, ?, yes</column>
<column name="- Loop 2">?, ?, 1, 1, 1, ?, yes</column>
<column name="- Loop 3">?, ?, ?, -, -, ?, no</column>
<column name=" + Loop 3.1">?, ?, 2, 1, 1, ?, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 526, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">2, -, 618, 748, -</column>
<column name="Memory">1, -, 0, 0, 0</column>
<column name="Multiplexer">-, -, -, 303, -</column>
<column name="Register">-, -, 566, -, -</column>
<specialColumn name="Available">280, 220, 106400, 53200, 0</specialColumn>
<specialColumn name="Utilization (%)">1, 0, 1, 2, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="PartitionCheckII_output_r_m_axi_U">PartitionCheckII_output_r_m_axi, 2, 0, 512, 580, 0</column>
<column name="PartitionCheckII_sqrt_s_axi_U">PartitionCheckII_sqrt_s_axi, 0, 0, 106, 168, 0</column>
</table>
</item>
<item name = "DSP48E"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="buff_U">PartitionCheckII_bkb, 1, 0, 0, 0, 100, 32, 1, 3200</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln21_1_fu_276_p2">+, 0, 0, 37, 30, 1</column>
<column name="add_ln21_fu_251_p2">+, 0, 0, 39, 3, 32</column>
<column name="add_ln57_fu_318_p2">+, 0, 0, 39, 32, 1</column>
<column name="i_1_fu_356_p2">+, 0, 0, 39, 1, 32</column>
<column name="i_2_fu_394_p2">+, 0, 0, 39, 32, 1</column>
<column name="i_fu_292_p2">+, 0, 0, 39, 32, 1</column>
<column name="sum0s_fu_368_p2">+, 0, 0, 39, 32, 32</column>
<column name="sum1s_fu_362_p2">+, 0, 0, 39, 32, 32</column>
<column name="and_ln59_fu_333_p2">and, 0, 0, 32, 32, 32</column>
<column name="ap_block_pp0_stage0_11001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state19_pp0_stage0_iter1">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln21_fu_271_p2">icmp, 0, 0, 18, 30, 30</column>
<column name="icmp_ln23_fu_287_p2">icmp, 0, 0, 18, 32, 32</column>
<column name="icmp_ln32_fu_323_p2">icmp, 0, 0, 18, 32, 32</column>
<column name="icmp_ln57_fu_328_p2">icmp, 0, 0, 18, 32, 32</column>
<column name="icmp_ln59_fu_339_p2">icmp, 0, 0, 18, 32, 1</column>
<column name="icmp_ln68_fu_388_p2">icmp, 0, 0, 18, 32, 32</column>
<column name="sum0s_1_fu_374_p3">select, 0, 0, 32, 1, 32</column>
<column name="sum1s_1_fu_381_p3">select, 0, 0, 32, 1, 32</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
<column name="ap_enable_pp2">xor, 0, 0, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 2, 2, 1</column>
<column name="ap_enable_reg_pp2_iter1">xor, 0, 0, 2, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">117, 25, 1, 25</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter2">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp2_iter1">15, 3, 1, 3</column>
<column name="ap_phi_mux_p_0_phi_fu_218_p4">9, 2, 1, 2</column>
<column name="ap_phi_mux_phi_ln21_phi_fu_125_p4">9, 2, 30, 60</column>
<column name="buff_address0">15, 3, 7, 21</column>
<column name="i_0_i_reg_203">9, 2, 32, 64</column>
<column name="i_0_reg_133">9, 2, 32, 64</column>
<column name="mask_0_i_reg_192">9, 2, 32, 64</column>
<column name="nPartitions_0_reg_144">9, 2, 32, 64</column>
<column name="output_r_ARADDR">15, 3, 32, 96</column>
<column name="output_r_ARLEN">15, 3, 32, 96</column>
<column name="output_r_blk_n_AR">9, 2, 1, 2</column>
<column name="output_r_blk_n_R">9, 2, 1, 2</column>
<column name="phi_ln21_reg_121">9, 2, 30, 60</column>
<column name="solution_reg_156">9, 2, 32, 64</column>
<column name="sum0s_0_i_reg_168">9, 2, 32, 64</column>
<column name="sum1s_0_i_reg_180">9, 2, 32, 64</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="add_ln21_1_reg_437">30, 0, 30, 0</column>
<column name="add_ln57_reg_465">32, 0, 32, 0</column>
<column name="ap_CS_fsm">24, 0, 24, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp2_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp2_iter1">1, 0, 1, 0</column>
<column name="array1_reg_404">30, 0, 30, 0</column>
<column name="i_0_i_reg_203">32, 0, 32, 0</column>
<column name="i_0_reg_133">32, 0, 32, 0</column>
<column name="icmp_ln21_reg_433">1, 0, 1, 0</column>
<column name="icmp_ln21_reg_433_pp0_iter1_reg">1, 0, 1, 0</column>
<column name="icmp_ln32_reg_470">1, 0, 1, 0</column>
<column name="icmp_ln57_reg_474">1, 0, 1, 0</column>
<column name="icmp_ln59_reg_478">1, 0, 1, 0</column>
<column name="lshr_ln_reg_422">30, 0, 30, 0</column>
<column name="mask_0_i_reg_192">32, 0, 32, 0</column>
<column name="nPartitions_0_reg_144">32, 0, 32, 0</column>
<column name="nPartitions_1_reg_460">31, 0, 32, 1</column>
<column name="n_reg_415">32, 0, 32, 0</column>
<column name="output_addr_read_reg_442">32, 0, 32, 0</column>
<column name="output_addr_reg_409">30, 0, 32, 2</column>
<column name="p_0_reg_214">1, 0, 1, 0</column>
<column name="phi_ln21_reg_121">30, 0, 30, 0</column>
<column name="phi_ln21_reg_121_pp0_iter1_reg">30, 0, 30, 0</column>
<column name="solution_reg_156">32, 0, 32, 0</column>
<column name="sum0s_0_i_reg_168">32, 0, 32, 0</column>
<column name="sum1s_0_i_reg_180">32, 0, 32, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_sqrt_AWVALID">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_AWREADY">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_AWADDR">in, 5, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_WVALID">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_WREADY">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_WDATA">in, 32, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_WSTRB">in, 4, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_ARVALID">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_ARREADY">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_ARADDR">in, 5, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_RVALID">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_RREADY">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_RDATA">out, 32, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_RRESP">out, 2, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_BVALID">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_BREADY">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_BRESP">out, 2, s_axi, sqrt, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, PartitionCheckII, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, PartitionCheckII, return value</column>
<column name="interrupt">out, 1, ap_ctrl_hs, PartitionCheckII, return value</column>
<column name="m_axi_output_r_AWVALID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWREADY">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWADDR">out, 32, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWLEN">out, 8, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWSIZE">out, 3, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWBURST">out, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWLOCK">out, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWCACHE">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWPROT">out, 3, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWQOS">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWREGION">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWUSER">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WVALID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WREADY">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WDATA">out, 32, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WSTRB">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WLAST">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WUSER">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARVALID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARREADY">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARADDR">out, 32, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARLEN">out, 8, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARSIZE">out, 3, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARBURST">out, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARLOCK">out, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARCACHE">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARPROT">out, 3, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARQOS">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARREGION">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARUSER">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RVALID">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RREADY">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RDATA">in, 32, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RLAST">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RID">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RUSER">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RRESP">in, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BVALID">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BREADY">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BRESP">in, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BID">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BUSER">in, 1, m_axi, output_r, pointer</column>
</table>
</item>
</section>
</profile>
